syntax = "proto3";

package clconnect.v1;

import "buf/validate/validate.proto";

// the health check endpoint allows for inducing errors.
enum InducedError {
  // when no induced error is specified
  INDUCED_ERROR_UNSPECIFIED = 0;
  // induces a unknown error
  INDUCED_ERROR_UNKNOWN = 1;
  // induces a panic
  INDUCED_ERROR_PANIC = 2;
}

// Request for checking health
message CheckHealthRequest {
  // echo will cause the respose to include the message
  string echo = 1 [(buf.validate.field).string.min_len = 1];
  // induce error
  InducedError induce_error = 2;
}

// Reponse for for cheking ehalth
message CheckHealthResponse {
  // echo response
  string echo = 1;
}

// Simple test request
message FooRequest {}

// Simple test response
message FooResponse {}

// Service with read-only endpoints, it's implementation will receive a
// read-only postgres connection pool
service ReadOnlyService {
  // Foo method for testing
  rpc Foo(FooRequest) returns (FooResponse);
}

// Service that can read and write
service ReadWriteService {
  // Check health endpoint for testing middleware
  rpc CheckHealth(CheckHealthRequest) returns (CheckHealthResponse);
}
